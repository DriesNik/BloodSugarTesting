@using Microsoft.AspNet.Identity
@model BllodSugarTester.Models.AddingSugarViewModel
<head>
    <title>Google Calendar API Quickstart</title>
    <meta charset='utf-8' />
</head>
@*@if(User.Identity.IsAuthenticated)
{
    someLabel = Membership.GetUser().;
}*@
<body>
    <p>Google Calendar API Quickstart</p>

    <!--Add buttons to initiate auth sequence and sign out-->
    <button id="authorize-button" style="display: none;">Authorize</button>
    <button id="signout-button" style="display: none;">Sign Out</button>

    @*<pre id="content"></pre>*@
    <div id="Path">

    </div>

    <form method="post">
    <div>
        <input name="UserId" value="@User.Identity.GetUserId()"/>
        <label for="Bs">Blood Sugar:</label>
        <input type="text" id="blood" name="BloodSugar" value="" />
    </div>
    <div>
        <input onclick="newEvent()" type="submit" id="blood" class="btn btn-default" value="submit">
    </div>
    </form>
    <div>
       
    </div>
    <script type="text/javascript">
        var CLIENT_ID = '359173490060-648im88guobnnhdb2hoqf3e7taqbrvhr.apps.googleusercontent.com';

      var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

      var SCOPES = "https://www.googleapis.com/auth/calendar";

      var authorizeButton = document.getElementById('authorize-button');
      var signoutButton = document.getElementById('signout-button');

      function handleClientLoad() {
        gapi.load('client:auth2', initClient);
      }

      function initClient() {
        gapi.client.init({
          discoveryDocs: DISCOVERY_DOCS,
          clientId: CLIENT_ID,
          scope: SCOPES
        }).then(function () {
          // Listen for sign-in state changes.
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

          // Handle the initial sign-in state.
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        });
      }

      function updateSigninStatus(isSignedIn) {
          if (isSignedIn) {

          authorizeButton.style.display = 'none';
          signoutButton.style.display = 'block';
          
        } else {
          authorizeButton.style.display = 'block';
          signoutButton.style.display = 'none';
        }
      }

      function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
      }

      function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
      }

      function appendPre(message) {
        var pre = document.getElementById('content');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }

      function newCalendar() {
          var request = gapi.client.calendar.calendars.insert({
              "resource":
                    {

                        "summary": "Blood Sugar Numbers",
                        "description": "nope",
                        "timezone": "America/Chicago"
                    }
          });
          //alert(request);
          request.execute(function (response) {
              console.log(response);
          });
      }

      function newEvent() {
          var x = document.getElementById("blood").value;
          console.log(x);
          var request = gapi.client.calendar.events.insert({
              "calendarId": @Model.calenID,
              "start": {
                  "dateTime":(new Date()).toISOString(),
                  "timezone": "America/Chicago"
                },
              "end": {
                  "dateTime":(new Date()).toISOString(),
                  "timezone": "America/Chicago"
              },
              "summary": x,
              "description": "nope",

          });
          //alert(request);
          request.execute(function (response) {
              console.log(response)
          });
          
      }
      function testThis() {




              var url = "https://www.googleapis.com/calendar/v3/users/me/calendarList";
              $.ajax({
                  type: 'GET',
                  data: {},
                  url: url,
                  dataType: 'json',
                  scope: 'https://www.googleapis.com/auth/calendar',
                  success: function (data) {

                      console.log(data);

                      var petfinder = data.petfinder;


                  },
                  error: function (request, error) {
                      console.log(request, error);
                  }
              });
          };



    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://apis.google.com/js/api.js"></script>
    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};handleClientLoad()"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
</body>
